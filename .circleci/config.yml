version: 2.1

parameters:
  APP_NAME:
    type: string
    default: "cicd-sample-app"

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  docker: circleci/docker@2.2.0
  jq: circleci/jq@2.2.0
  aws-ecr: circleci/aws-ecr@8.2.1
  rnikkei-yq: nikkei/rnikkei-yq@0.0.3

jobs:
  BuildAndTest:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name : Maven Test
          command : |
            chmod +x mvnw
            ./mvnw -e clean test

      - run:
          name : Maven Build
          command : |
            chmod +x mvnw
            ./mvnw -e clean package -DskipTests

      - save_cache:
          paths:
            - ~/.mvn
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - .


  DockerBuild:
    machine: true
    steps:
      - attach_workspace:
          at: /home/circleci/project

      - aws-cli/install:
          override-installed: false
          disable-aws-pager: true

      - aws-ecr/ecr-login

      - aws-ecr/build-and-push-image:
          checkout: false
          docker-login: false
          dockerfile: Dockerfile
          push-image: true
          repo: << pipeline.parameters.APP_NAME >>
          tag: $(echo $CIRCLE_SHA1 | cut -c -7)

  ManifestDeploy:
    machine: true
    steps:
      - jq/install
      - aws-cli/install:
          override-installed: false
          disable-aws-pager: true

      - run:
          name: Manifest Deploy
          command: |
            curl -sSL -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            chmod +x /usr/local/bin/yq

            echo "Argo Workflow call process..."
            git clone -b main https://misoboy:${GITHUB_TOKEN}@github.com/cnalabs/cicd-sample-helm.git /tmp/helm
            cd /tmp/helm
            
            V_TIMESTAMP=$(date +%s)
            yq e --inplace ".timestamp = \"$V_TIMESTAMP\"" values.yaml
            yq e --inplace ".imageRepo = \"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< pipeline.parameters.APP_NAME >>\"" values.yaml
            yq e --inplace ".imageTag = \"$(echo $CIRCLE_SHA1 | cut -c -7)\"" values.yaml
            
            git config user.email "misoboy.kor@gmail.com"
            git config user.name "misoboy.kor"
            git add -u
            git commit -m "Update Image Tag: << pipeline.parameters.APP_NAME >>:$(echo $CIRCLE_SHA1 | cut -c -7)"
            git push origin main

    ArgoWorkflow:
      steps:
        - jq/install
        - run:
            name: Call Argo Workflow
            command: |
              curl --location 'https://webhook.slabs.kr/trigger' \
              --header 'Content-Type: application/json' \
                --data-raw '{
                "pusher": {
                  "name": "misoboy",
                  "email": "misoboy.kor@gmail.com"
                }
              }'

workflows:
  version: 2
  workflow:
    jobs:
      - BuildAndTest:
          filters:
            branches:
              only: main
      - DockerBuild:
          context: GITHUB_SECRET
          requires:
            - BuildAndTest
          filters:
            branches:
              only: main
      - ManifestDeploy:
          context: GITHUB_SECRET
          requires:
            - DockerBuild
          filters:
            branches:
              only: main
      - ArgoWorkflow:
          context: GITHUB_SECRET
          requires:
            - ManifestDeploy
          filters:
            branches:
              only: main
